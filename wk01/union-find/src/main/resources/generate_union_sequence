#!/usr/bin/env bash

NUMBER_OF_NODES=$1
NUMBER_OF_UNION_SEQUENCES=$2
if [[ -z "$1" || -z "$2" ]]; then
  exit 1
fi

bar_size=40
bar_char_done="#"
bar_char_todo="-"
bar_percentage_scale=2
function show_progress {
    current="$1"
    total="$2"

    # calculate the progress in percentage
    percent=$(bc <<< "scale=$bar_percentage_scale; 100 * $current / $total" )
    # The number of done and todo characters
    done=$(bc <<< "scale=0; $bar_size * $percent / 100" )
    todo=$(bc <<< "scale=0; $bar_size - $done" )

    # build the done and todo sub-bars
    done_sub_bar=$(printf "%${done}s" | tr " " "${bar_char_done}")
    todo_sub_bar=$(printf "%${todo}s" | tr " " "${bar_char_todo}")

    # output the bar
    echo -ne "\rProgress : [${done_sub_bar}${todo_sub_bar}] ${percent}%"

    if [ $total -eq $current ]; then
      echo -e "\nDONE -- $(date)"
    fi
}

random_int() {
  local min=$1
  local max=$2
  if [[ -z $1 || -z $2 ]]; then
    return 1;
  fi

  if jot -r 1 "${min}" "${max}"; then
    return 0
  else
    echo 'FATAL: random_int function failure!'
    return 2
  fi
}

generate_union() {
  local min_node_idx=$1
  local max_node_idx=$2
  if [[ -z $1 || -z $2 ]]; then
    return 1;
  fi

  local MAX_TRIES=10
  local tries=0
  while true; do
    (( tries += 1 ))
    local node1 node2
	  node1="$(random_int "${min_node_idx}" "${max_node_idx}")"
	  node2="$(random_int "${min_node_idx}" "${max_node_idx}")"

    if [[ -n "${node1}" && -n "${node2}" && "${node1}" != "${node2}" ]]; then
      echo "${node1} ${node2}"
      return 0
    fi

    if (( tries == MAX_TRIES )); then
      echo 'FATAL: generate_union function reached max tries!'
      return 2
    fi
  done
}

MIN_NODE_INDEX=0
MAX_NODE_INDEX="$(( NUMBER_OF_NODES - 1 ))"

runid="$(date +%s)"
output_file="uf_inputdata_${NUMBER_OF_NODES}NOD_${NUMBER_OF_UNION_SEQUENCES}SEQ_${runid}.txt"

echo "${NUMBER_OF_NODES}" > "${output_file}"

for ((s = 0 ; s < "${NUMBER_OF_UNION_SEQUENCES}" ; s++ )); do
  if ! generated_union="$(generate_union "${MIN_NODE_INDEX}" "${MAX_NODE_INDEX}")"; then
    echo 'FATAL: Internal error occurred!'
    echo 'Initiating program shutdown...'
    rm --force --verbose "${output_file}"
    exit 1
  fi
  echo "${generated_union}" >> "${output_file}"
  show_progress "$((s+1))" "${NUMBER_OF_UNION_SEQUENCES}"
done

exit 0
